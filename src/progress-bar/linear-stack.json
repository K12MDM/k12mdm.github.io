{"index.html":"<html><head><script src=\"https://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"control-section\">\n    <div class=\"row linear-parent\">\n        <div>\n            <div class=\"col-lg-12 col-sm-12 progressbar-label\">Determinate</div>\n            <div id=\"lineardeterminate\"></div>\n        </div>\n        <div>\n            <div class=\"col-lg-12 col-sm-12 progressbar-label\">Indeterminate</div>\n            <div id=\"linearindeterminate\"></div>\n        </div>\n        <div>\n            <div class=\"col-lg-12 col-sm-12 progressbar-label\">Segment</div>\n            <div id=\"linearsegment\"></div>\n        </div>\n        <div>\n            <div class=\"col-lg-12 col-sm-12 progressbar-label\">Buffer</div>\n            <div id=\"linearbuffer\"></div>\n        </div>\n        <div>\n            <div class=\"col-lg-12 col-sm-12 progressbar-label\">Active</div>\n            <div id=\"linearactive\"></div>\n        </div>\n    </div>\n    <div class=\"row linear-parent\">\n        <button id=\"reLoad\" class=\"e-control e-btn e-lib e-outline e-primary\">Reload</button></div>\n    </div>\n</div>\n\n\n<style>\n   #control-container {\n\t\t\tpadding: 0px !important;\n\t\t}\n\n\t\t.linear-parent {\n\t\t\ttext-align: center;\n\t\t\twidth: 80%;\n\t\t\tmargin: auto;\n\t\t}\n\n\t\t.progressbar-label {\n\t\t\ttext-align: left;\n\t\t\tfont-family: Roboto-Regular;\n\t\t\tfont-size: 14px;\n\t\t\tcolor: #3D3E3C;\n\t\t\tmargin-left: 10px;\n\t\t\tpadding: 0px;\n\t\t\ttop: 20px;\n\t\t}\n\n\t\t#reLoad {\n\t\t\tborder-radius: 4px;\n\t\t\ttext-transform: capitalize;\n\t\t}\n</style></body></html>","index.js":"{{ripple}}\n\n  var div = document.getElementsByClassName('progressbar-label');\n\n  var progressLoad = function (args) {\n      var linearTheme = location.hash.split('/')[1];\n      linearTheme = linearTheme ? linearTheme : 'Material';\n      args.progressBar.theme = (linearTheme.charAt(0).toUpperCase() +\n          linearTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast');\n      if (args.progressBar.theme === 'HighContrast' || args.progressBar.theme === 'Bootstrap5Dark' || args.progressBar.theme === 'BootstrapDark' || args.progressBar.theme === 'FabricDark' || args.progressBar.theme === 'TailwindDark' || args.progressBar.theme === 'MaterialDark') {\n          for (var i = 0; i < div.length; i++) {\n              div[i].setAttribute('style', 'color:white');\n          }\n      }\n  };\n\n  var button = new ej.buttons.Button();\n  button = new ej.buttons.Button({ cssClass: 'e-outline', isPrimary: true });\n  button.appendTo('#reLoad');\n\n  var linearProgress1 = new ej.progressbar.ProgressBar({\n    type: 'Linear',\n    height: '60',\n    value: 100,\n    animation: {\n      enable: true,\n      duration: 2000,\n      delay: 0,\n    },\n    load: progressLoad\n  });\n  linearProgress1.appendTo('#lineardeterminate');\n\n  var linearProgress2 = new ej.progressbar.ProgressBar({\n    type: 'Linear',\n    height: '60',\n    isIndeterminate: true,\n    value: 20,\n    animation: {\n      enable: true,\n      duration: 2000,\n      delay: 0,\n    },\n    load: progressLoad\n  });\n  linearProgress2.appendTo('#linearindeterminate');\n\n  var linearProgress3 = new ej.progressbar.ProgressBar({\n    type: 'Linear',\n    height: '60',\n    segmentCount: 8,\n    value: 100,\n    animation: {\n      enable: true,\n      duration: 2000,\n      delay: 0,\n    },\n    load: progressLoad\n  });\n  linearProgress3.appendTo('#linearsegment');\n\n  var linearProgress4 = new ej.progressbar.ProgressBar({\n    type: 'Linear',\n    height: '60',\n    value: 40,\n    secondaryProgress: 60,\n    animation: {\n      enable: true,\n      duration: 2000,\n      delay: 0,\n    },\n    load: progressLoad\n  });\n  linearProgress4.appendTo('#linearbuffer');\n\n  var activeProgress = new ej.progressbar.ProgressBar({\n    type: 'Linear',\n    height: '60',\n    value: 100,\n    isActive: true,\n    animation: {\n        enable: true,\n        duration: 2000,\n        delay: 0,\n    },\n    load: progressLoad\n});\nactiveProgress.appendTo('#linearactive');\n\n  var replayBtn = document.getElementById('reLoad');\n  replayBtn.onclick = function () {\n    linearProgress1.refresh();\n    linearProgress2.refresh();\n    linearProgress3.refresh();\n    linearProgress4.refresh();\n    activeProgress.refresh();\n  };\n"}